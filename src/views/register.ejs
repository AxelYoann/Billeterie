<%- include('layouts/main', { page: 'register' }) %>

<script>
// Contenu de la page register sera injecté ici
</script>

<div class="container-fluid vh-100 d-flex align-items-center justify-content-center bg-light py-4">
  <div class="row w-100 justify-content-center">
    <div class="col-md-8 col-lg-6 col-xl-5">
      <div class="card shadow-lg border-0">
        <div class="card-body p-5">
          <!-- Logo/Header -->
          <div class="text-center mb-4">
            <h2 class="fw-bold text-primary mb-2">
              <i class="fas fa-ticket-alt me-2"></i>
              Billeterie
            </h2>
            <p class="text-muted">Créez votre compte</p>
          </div>

          <!-- Messages d'erreur/succès -->
          <div id="alert-container"></div>

          <!-- Formulaire d'inscription -->
          <form id="registerForm" novalidate>
            <!-- Type de compte -->
            <div class="mb-4">
              <label class="form-label">
                <i class="fas fa-user-tag me-1"></i>
                Type de compte
              </label>
              <div class="row g-3">
                <div class="col-6">
                  <div class="form-check form-check-card">
                    <input class="form-check-input" type="radio" name="role" id="client" value="client" checked>
                    <label class="form-check-label w-100 p-3 border rounded" for="client">
                      <div class="text-center">
                        <i class="fas fa-user fa-2x text-primary mb-2"></i>
                        <div class="fw-semibold">Client</div>
                        <small class="text-muted">Acheter des tickets</small>
                      </div>
                    </label>
                  </div>
                </div>
                <div class="col-6">
                  <div class="form-check form-check-card">
                    <input class="form-check-input" type="radio" name="role" id="provider" value="provider">
                    <label class="form-check-label w-100 p-3 border rounded" for="provider">
                      <div class="text-center">
                        <i class="fas fa-store fa-2x text-success mb-2"></i>
                        <div class="fw-semibold">Prestataire</div>
                        <small class="text-muted">Vendre des tickets</small>
                      </div>
                    </label>
                  </div>
                </div>
              </div>
            </div>

            <!-- Informations personnelles -->
            <div class="row g-3 mb-3">
              <div class="col-md-6">
                <label for="firstName" class="form-label">
                  <i class="fas fa-user me-1"></i>
                  Prénom *
                </label>
                <input 
                  type="text" 
                  class="form-control" 
                  id="firstName" 
                  name="firstName" 
                  placeholder="Jean"
                  required
                  autocomplete="given-name"
                >
                <div class="invalid-feedback"></div>
              </div>
              <div class="col-md-6">
                <label for="lastName" class="form-label">
                  <i class="fas fa-user me-1"></i>
                  Nom *
                </label>
                <input 
                  type="text" 
                  class="form-control" 
                  id="lastName" 
                  name="lastName" 
                  placeholder="Dupont"
                  required
                  autocomplete="family-name"
                >
                <div class="invalid-feedback"></div>
              </div>
            </div>

            <!-- Email -->
            <div class="mb-3">
              <label for="email" class="form-label">
                <i class="fas fa-envelope me-1"></i>
                Adresse email *
              </label>
              <div class="input-group">
                <span class="input-group-text bg-light border-end-0">
                  <i class="fas fa-at text-muted"></i>
                </span>
                <input 
                  type="email" 
                  class="form-control border-start-0 ps-0" 
                  id="email" 
                  name="email" 
                  placeholder="votre@email.com"
                  required
                  autocomplete="email"
                >
              </div>
              <div class="invalid-feedback"></div>
            </div>

            <!-- Mot de passe -->
            <div class="mb-3">
              <label for="password" class="form-label">
                <i class="fas fa-lock me-1"></i>
                Mot de passe *
              </label>
              <div class="input-group">
                <span class="input-group-text bg-light border-end-0">
                  <i class="fas fa-key text-muted"></i>
                </span>
                <input 
                  type="password" 
                  class="form-control border-start-0 border-end-0 ps-0" 
                  id="password" 
                  name="password" 
                  placeholder="Votre mot de passe"
                  required
                  autocomplete="new-password"
                >
                <button 
                  class="btn btn-outline-secondary border-start-0" 
                  type="button" 
                  id="togglePassword"
                  tabindex="-1"
                >
                  <i class="fas fa-eye"></i>
                </button>
              </div>
              <div class="invalid-feedback"></div>
              <div class="form-text">
                Minimum 8 caractères avec au moins une majuscule, une minuscule et un chiffre
              </div>
            </div>

            <!-- Confirmation mot de passe -->
            <div class="mb-3">
              <label for="confirmPassword" class="form-label">
                <i class="fas fa-lock me-1"></i>
                Confirmer le mot de passe *
              </label>
              <div class="input-group">
                <span class="input-group-text bg-light border-end-0">
                  <i class="fas fa-check text-muted"></i>
                </span>
                <input 
                  type="password" 
                  class="form-control border-start-0 border-end-0 ps-0" 
                  id="confirmPassword" 
                  name="confirmPassword" 
                  placeholder="Confirmez votre mot de passe"
                  required
                  autocomplete="new-password"
                >
                <button 
                  class="btn btn-outline-secondary border-start-0" 
                  type="button" 
                  id="toggleConfirmPassword"
                  tabindex="-1"
                >
                  <i class="fas fa-eye"></i>
                </button>
              </div>
              <div class="invalid-feedback"></div>
            </div>

            <!-- Informations prestataire (masquées par défaut) -->
            <div id="providerFields" class="d-none">
              <div class="mb-3">
                <label for="companyName" class="form-label">
                  <i class="fas fa-building me-1"></i>
                  Nom de l'entreprise *
                </label>
                <input 
                  type="text" 
                  class="form-control" 
                  id="companyName" 
                  name="companyName" 
                  placeholder="Mon Entreprise SARL"
                  autocomplete="organization"
                >
                <div class="invalid-feedback"></div>
              </div>
              
              <div class="mb-3">
                <label for="phone" class="form-label">
                  <i class="fas fa-phone me-1"></i>
                  Téléphone
                </label>
                <input 
                  type="tel" 
                  class="form-control" 
                  id="phone" 
                  name="phone" 
                  placeholder="+33 1 23 45 67 89"
                  autocomplete="tel"
                >
                <div class="invalid-feedback"></div>
              </div>
            </div>

            <!-- Acceptation des conditions -->
            <div class="mb-4">
              <div class="form-check">
                <input class="form-check-input" type="checkbox" id="acceptTerms" name="acceptTerms" required>
                <label class="form-check-label" for="acceptTerms">
                  J'accepte les 
                  <a href="/terms" class="text-decoration-none" target="_blank">
                    conditions d'utilisation
                  </a> 
                  et la 
                  <a href="/privacy" class="text-decoration-none" target="_blank">
                    politique de confidentialité
                  </a>
                </label>
                <div class="invalid-feedback">
                  Vous devez accepter les conditions d'utilisation
                </div>
              </div>
              
              <div class="form-check">
                <input class="form-check-input" type="checkbox" id="acceptNewsletter" name="acceptNewsletter">
                <label class="form-check-label" for="acceptNewsletter">
                  Je souhaite recevoir les actualités et promotions par email
                </label>
              </div>
            </div>

            <!-- Bouton d'inscription -->
            <div class="d-grid mb-3">
              <button type="submit" class="btn btn-primary btn-lg" id="registerBtn">
                <span class="spinner-border spinner-border-sm me-2 d-none" id="registerSpinner"></span>
                <i class="fas fa-user-plus me-2"></i>
                Créer mon compte
              </button>
            </div>
          </form>

          <!-- Divider -->
          <div class="text-center my-4">
            <div class="d-flex align-items-center">
              <hr class="flex-grow-1">
              <span class="px-3 text-muted small">OU</span>
              <hr class="flex-grow-1">
            </div>
          </div>

          <!-- Options d'inscription sociale -->
          <div class="row g-2 mb-4">
            <div class="col-6">
              <button type="button" class="btn btn-outline-danger w-100">
                <i class="fab fa-google me-1"></i>
                Google
              </button>
            </div>
            <div class="col-6">
              <button type="button" class="btn btn-outline-primary w-100">
                <i class="fab fa-facebook-f me-1"></i>
                Facebook
              </button>
            </div>
          </div>

          <!-- Lien de connexion -->
          <div class="text-center">
            <p class="mb-0 text-muted">
              Vous avez déjà un compte ?
              <a href="/auth/login" class="text-decoration-none fw-semibold">
                Se connecter
              </a>
            </p>
          </div>
        </div>

        <!-- Footer de la carte -->
        <div class="card-footer bg-light text-center py-3">
          <small class="text-muted">
            <i class="fas fa-shield-alt me-1"></i>
            Inscription sécurisée SSL
          </small>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
// Gestion du formulaire d'inscription
document.addEventListener('DOMContentLoaded', function() {
  const registerForm = document.getElementById('registerForm');
  const registerBtn = document.getElementById('registerBtn');
  const registerSpinner = document.getElementById('registerSpinner');
  const providerFields = document.getElementById('providerFields');
  
  // Gestion des champs spécifiques aux prestataires
  const roleRadios = document.querySelectorAll('input[name="role"]');
  roleRadios.forEach(radio => {
    radio.addEventListener('change', function() {
      if (this.value === 'provider') {
        providerFields.classList.remove('d-none');
        document.getElementById('companyName').required = true;
      } else {
        providerFields.classList.add('d-none');
        document.getElementById('companyName').required = false;
      }
      updateCardStyles();
    });
  });

  // Gestion de l'affichage des mots de passe
  const togglePassword = document.getElementById('togglePassword');
  const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');
  const passwordField = document.getElementById('password');
  const confirmPasswordField = document.getElementById('confirmPassword');

  togglePassword.addEventListener('click', function() {
    togglePasswordVisibility(passwordField, this);
  });

  toggleConfirmPassword.addEventListener('click', function() {
    togglePasswordVisibility(confirmPasswordField, this);
  });

  // Validation en temps réel
  const fields = ['firstName', 'lastName', 'email', 'password', 'confirmPassword'];
  fields.forEach(fieldName => {
    const field = document.getElementById(fieldName);
    field.addEventListener('blur', function() {
      validateField(fieldName, this);
    });
  });

  // Validation spéciale pour la confirmation du mot de passe
  confirmPasswordField.addEventListener('input', function() {
    if (this.value && passwordField.value) {
      validatePasswordMatch();
    }
  });

  passwordField.addEventListener('input', function() {
    if (confirmPasswordField.value) {
      validatePasswordMatch();
    }
  });

  // Soumission du formulaire
  registerForm.addEventListener('submit', async function(e) {
    e.preventDefault();
    
    // Validation complète
    const isValid = validateForm();
    if (!isValid) return;

    // État de chargement
    setLoadingState(true);

    try {
      const formData = new FormData(this);
      const data = {
        firstName: formData.get('firstName'),
        lastName: formData.get('lastName'),
        email: formData.get('email'),
        password: formData.get('password'),
        role: formData.get('role'),
        acceptTerms: formData.get('acceptTerms') === 'on',
        acceptNewsletter: formData.get('acceptNewsletter') === 'on'
      };

      // Ajouter les champs prestataire si nécessaire
      if (data.role === 'provider') {
        data.companyName = formData.get('companyName');
        data.phone = formData.get('phone');
      }

      const response = await fetch('/api/auth/register', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
      });

      const result = await response.json();

      if (result.success) {
        showAlert('Inscription réussie ! Redirection...', 'success');
        
        // Redirection après inscription
        setTimeout(() => {
          if (result.user.role === 'provider') {
            window.location.href = '/provider/dashboard';
          } else {
            window.location.href = '/dashboard';
          }
        }, 2000);
      } else {
        showAlert(result.message || 'Erreur lors de l\'inscription', 'danger');
        setLoadingState(false);
      }
    } catch (error) {
      console.error('Erreur:', error);
      showAlert('Erreur lors de l\'inscription. Veuillez réessayer.', 'danger');
      setLoadingState(false);
    }
  });

  // Fonctions utilitaires
  function togglePasswordVisibility(field, button) {
    const type = field.getAttribute('type') === 'password' ? 'text' : 'password';
    field.setAttribute('type', type);
    
    const icon = button.querySelector('i');
    icon.classList.toggle('fa-eye');
    icon.classList.toggle('fa-eye-slash');
  }

  function updateCardStyles() {
    const cards = document.querySelectorAll('.form-check-card label');
    const checkedRadio = document.querySelector('input[name="role"]:checked');
    
    cards.forEach(card => {
      card.classList.remove('border-primary', 'bg-light');
    });
    
    if (checkedRadio) {
      const checkedLabel = document.querySelector(`label[for="${checkedRadio.id}"]`);
      checkedLabel.classList.add('border-primary', 'bg-light');
    }
  }

  function validateForm() {
    let isValid = true;
    
    // Validation de tous les champs requis
    const requiredFields = ['firstName', 'lastName', 'email', 'password', 'confirmPassword'];
    requiredFields.forEach(fieldName => {
      if (!validateField(fieldName, document.getElementById(fieldName))) {
        isValid = false;
      }
    });

    // Validation spécifique aux prestataires
    const selectedRole = document.querySelector('input[name="role"]:checked').value;
    if (selectedRole === 'provider') {
      if (!validateField('companyName', document.getElementById('companyName'))) {
        isValid = false;
      }
    }

    // Validation des mots de passe
    if (!validatePasswordMatch()) {
      isValid = false;
    }

    // Validation des conditions
    const acceptTerms = document.getElementById('acceptTerms');
    if (!acceptTerms.checked) {
      showFieldError(acceptTerms, 'Vous devez accepter les conditions d\'utilisation');
      isValid = false;
    }

    return isValid;
  }

  function validateField(fieldName, field) {
    const value = field.value.trim();
    
    switch (fieldName) {
      case 'firstName':
      case 'lastName':
        if (!value || value.length < 2) {
          showFieldError(field, 'Ce champ doit contenir au moins 2 caractères');
          return false;
        }
        break;
        
      case 'email':
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!value) {
          showFieldError(field, 'L\'adresse email est requise');
          return false;
        }
        if (!emailRegex.test(value)) {
          showFieldError(field, 'Adresse email invalide');
          return false;
        }
        break;
        
      case 'password':
        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$/;
        if (!value) {
          showFieldError(field, 'Le mot de passe est requis');
          return false;
        }
        if (!passwordRegex.test(value)) {
          showFieldError(field, 'Le mot de passe doit contenir au moins 8 caractères avec une majuscule, une minuscule et un chiffre');
          return false;
        }
        break;
        
      case 'confirmPassword':
        if (!value) {
          showFieldError(field, 'La confirmation du mot de passe est requise');
          return false;
        }
        break;
        
      case 'companyName':
        if (!value || value.length < 2) {
          showFieldError(field, 'Le nom de l\'entreprise est requis');
          return false;
        }
        break;
    }
    
    clearFieldError(field);
    return true;
  }

  function validatePasswordMatch() {
    const password = passwordField.value;
    const confirmPassword = confirmPasswordField.value;
    
    if (password && confirmPassword && password !== confirmPassword) {
      showFieldError(confirmPasswordField, 'Les mots de passe ne correspondent pas');
      return false;
    }
    
    if (password === confirmPassword && confirmPassword) {
      clearFieldError(confirmPasswordField);
    }
    return true;
  }

  function showFieldError(field, message) {
    field.classList.add('is-invalid');
    const feedback = field.parentNode.nextElementSibling || field.nextElementSibling;
    if (feedback && feedback.classList.contains('invalid-feedback')) {
      feedback.textContent = message;
    }
  }

  function clearFieldError(field) {
    field.classList.remove('is-invalid');
  }

  function setLoadingState(loading) {
    if (loading) {
      registerBtn.disabled = true;
      registerSpinner.classList.remove('d-none');
      registerBtn.innerHTML = registerSpinner.outerHTML + ' Création du compte...';
    } else {
      registerBtn.disabled = false;
      registerSpinner.classList.add('d-none');
      registerBtn.innerHTML = '<i class="fas fa-user-plus me-2"></i>Créer mon compte';
    }
  }

  function showAlert(message, type) {
    const alertContainer = document.getElementById('alert-container');
    const alertClass = `alert-${type}`;
    
    alertContainer.innerHTML = `
      <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
        <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-triangle'} me-2"></i>
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
      </div>
    `;
  }

  // Initialiser les styles des cartes
  updateCardStyles();
});
</script>

<style>
.card {
  border-radius: 1rem;
  backdrop-filter: blur(10px);
}

.form-check-card label {
  cursor: pointer;
  transition: all 0.3s ease;
}

.form-check-card label:hover {
  border-color: #0d6efd !important;
  background-color: #f8f9fa !important;
}

.form-check-card input[type="radio"] {
  position: absolute;
  opacity: 0;
}

.input-group-text {
  background-color: #f8f9fa;
  border-color: #dee2e6;
}

.form-control:focus {
  border-color: #0d6efd;
  box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
}

.btn-primary {
  background: linear-gradient(135deg, #0d6efd 0%, #0b5ed7 100%);
  border: none;
}

.btn-primary:hover {
  background: linear-gradient(135deg, #0b5ed7 0%, #0a58ca 100%);
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(13, 110, 253, 0.3);
}

.btn-outline-danger:hover {
  background-color: #dc3545;
  border-color: #dc3545;
}

.btn-outline-primary:hover {
  background-color: #0d6efd;
  border-color: #0d6efd;
}

@media (max-width: 768px) {
  .card-body {
    padding: 2rem 1.5rem !important;
  }
  
  .form-check-card label {
    padding: 1.5rem !important;
  }
}

.alert {
  border: none;
  border-radius: 0.5rem;
}

.is-invalid {
  border-color: #dc3545 !important;
}

.invalid-feedback {
  display: block;
}

.spinner-border-sm {
  width: 1rem;
  height: 1rem;
}

.form-text {
  font-size: 0.8rem;
}
</style>