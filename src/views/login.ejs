<%- include('layouts/main', { page: 'login' }) %>

<script>
// Contenu de la page login sera injecté ici
</script>

<div class="container-fluid vh-100 d-flex align-items-center justify-content-center bg-light">
  <div class="row w-100 justify-content-center">
    <div class="col-md-8 col-lg-6 col-xl-4">
      <div class="card shadow-lg border-0">
        <div class="card-body p-5">
          <!-- Logo/Header -->
          <div class="text-center mb-4">
            <h2 class="fw-bold text-primary mb-2">
              <i class="fas fa-ticket-alt me-2"></i>
              Billeterie
            </h2>
            <p class="text-muted">Connectez-vous à votre compte</p>
          </div>

          <!-- Messages d'erreur/succès -->
          <div id="alert-container"></div>

          <!-- Formulaire de connexion -->
          <form id="loginForm" novalidate>
            <div class="mb-3">
              <label for="email" class="form-label">
                <i class="fas fa-envelope me-1"></i>
                Adresse email
              </label>
              <div class="input-group">
                <span class="input-group-text bg-light border-end-0">
                  <i class="fas fa-at text-muted"></i>
                </span>
                <input 
                  type="email" 
                  class="form-control border-start-0 ps-0" 
                  id="email" 
                  name="email" 
                  placeholder="votre@email.com"
                  required
                  autocomplete="email"
                >
              </div>
              <div class="invalid-feedback"></div>
            </div>

            <div class="mb-3">
              <label for="password" class="form-label">
                <i class="fas fa-lock me-1"></i>
                Mot de passe
              </label>
              <div class="input-group">
                <span class="input-group-text bg-light border-end-0">
                  <i class="fas fa-key text-muted"></i>
                </span>
                <input 
                  type="password" 
                  class="form-control border-start-0 border-end-0 ps-0" 
                  id="password" 
                  name="password" 
                  placeholder="Votre mot de passe"
                  required
                  autocomplete="current-password"
                >
                <button 
                  class="btn btn-outline-secondary border-start-0" 
                  type="button" 
                  id="togglePassword"
                  tabindex="-1"
                >
                  <i class="fas fa-eye"></i>
                </button>
              </div>
              <div class="invalid-feedback"></div>
            </div>

            <div class="row mb-3">
              <div class="col-6">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" id="rememberMe" name="rememberMe">
                  <label class="form-check-label" for="rememberMe">
                    Se souvenir de moi
                  </label>
                </div>
              </div>
              <div class="col-6 text-end">
                <a href="/auth/forgot-password" class="text-decoration-none small">
                  Mot de passe oublié ?
                </a>
              </div>
            </div>

            <div class="d-grid mb-3">
              <button type="submit" class="btn btn-primary btn-lg" id="loginBtn">
                <span class="spinner-border spinner-border-sm me-2 d-none" id="loginSpinner"></span>
                <i class="fas fa-sign-in-alt me-2"></i>
                Se connecter
              </button>
            </div>
          </form>

          <!-- Divider -->
          <div class="text-center my-4">
            <div class="d-flex align-items-center">
              <hr class="flex-grow-1">
              <span class="px-3 text-muted small">OU</span>
              <hr class="flex-grow-1">
            </div>
          </div>

          <!-- Options de connexion sociale -->
          <div class="row g-2 mb-4">
            <div class="col-6">
              <button type="button" class="btn btn-outline-danger w-100">
                <i class="fab fa-google me-1"></i>
                Google
              </button>
            </div>
            <div class="col-6">
              <button type="button" class="btn btn-outline-primary w-100">
                <i class="fab fa-facebook-f me-1"></i>
                Facebook
              </button>
            </div>
          </div>

          <!-- Lien d'inscription -->
          <div class="text-center">
            <p class="mb-0 text-muted">
              Vous n'avez pas de compte ?
              <a href="/auth/register" class="text-decoration-none fw-semibold">
                Créer un compte
              </a>
            </p>
          </div>
        </div>

        <!-- Footer de la carte -->
        <div class="card-footer bg-light text-center py-3">
          <small class="text-muted">
            <i class="fas fa-shield-alt me-1"></i>
            Connexion sécurisée SSL
          </small>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
// Gestion du formulaire de connexion
document.addEventListener('DOMContentLoaded', function() {
  const loginForm = document.getElementById('loginForm');
  const loginBtn = document.getElementById('loginBtn');
  const loginSpinner = document.getElementById('loginSpinner');
  const togglePassword = document.getElementById('togglePassword');
  const passwordField = document.getElementById('password');

  // Toggle password visibility
  togglePassword.addEventListener('click', function() {
    const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
    passwordField.setAttribute('type', type);
    
    const icon = this.querySelector('i');
    icon.classList.toggle('fa-eye');
    icon.classList.toggle('fa-eye-slash');
  });

  // Validation en temps réel
  const emailField = document.getElementById('email');
  
  emailField.addEventListener('blur', function() {
    validateEmail(this);
  });

  passwordField.addEventListener('input', function() {
    if (this.value.length > 0) {
      this.classList.remove('is-invalid');
    }
  });

  // Soumission du formulaire
  loginForm.addEventListener('submit', async function(e) {
    e.preventDefault();
    
    // Validation
    const isValid = validateForm();
    if (!isValid) return;

    // État de chargement
    setLoadingState(true);

    try {
      const formData = new FormData(this);
      const data = {
        email: formData.get('email'),
        password: formData.get('password'),
        rememberMe: formData.get('rememberMe') === 'on'
      };

      const response = await fetch('/api/auth/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
      });

      const result = await response.json();

      if (result.success) {
        showAlert('Connexion réussie ! Redirection...', 'success');
        
        // Redirection basée sur le rôle
        setTimeout(() => {
          if (result.user.role === 'provider') {
            window.location.href = '/provider/dashboard';
          } else {
            window.location.href = '/dashboard';
          }
        }, 1500);
      } else {
        showAlert(result.message || 'Erreur de connexion', 'danger');
        setLoadingState(false);
      }
    } catch (error) {
      console.error('Erreur:', error);
      showAlert('Erreur de connexion. Veuillez réessayer.', 'danger');
      setLoadingState(false);
    }
  });

  function validateForm() {
    let isValid = true;
    
    // Validation email
    if (!validateEmail(emailField)) {
      isValid = false;
    }
    
    // Validation mot de passe
    if (passwordField.value.length < 1) {
      showFieldError(passwordField, 'Le mot de passe est requis');
      isValid = false;
    }
    
    return isValid;
  }

  function validateEmail(field) {
    const email = field.value.trim();
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    
    if (!email) {
      showFieldError(field, 'L\'adresse email est requise');
      return false;
    }
    
    if (!emailRegex.test(email)) {
      showFieldError(field, 'Adresse email invalide');
      return false;
    }
    
    clearFieldError(field);
    return true;
  }

  function showFieldError(field, message) {
    field.classList.add('is-invalid');
    const feedback = field.parentNode.nextElementSibling;
    if (feedback && feedback.classList.contains('invalid-feedback')) {
      feedback.textContent = message;
    }
  }

  function clearFieldError(field) {
    field.classList.remove('is-invalid');
  }

  function setLoadingState(loading) {
    if (loading) {
      loginBtn.disabled = true;
      loginSpinner.classList.remove('d-none');
      loginBtn.innerHTML = loginSpinner.outerHTML + ' Connexion...';
    } else {
      loginBtn.disabled = false;
      loginSpinner.classList.add('d-none');
      loginBtn.innerHTML = '<i class="fas fa-sign-in-alt me-2"></i>Se connecter';
    }
  }

  function showAlert(message, type) {
    const alertContainer = document.getElementById('alert-container');
    const alertClass = `alert-${type}`;
    
    alertContainer.innerHTML = `
      <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
        <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-triangle'} me-2"></i>
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
      </div>
    `;
  }
});
</script>

<style>
.card {
  border-radius: 1rem;
  backdrop-filter: blur(10px);
}

.input-group-text {
  background-color: #f8f9fa;
  border-color: #dee2e6;
}

.form-control:focus {
  border-color: #0d6efd;
  box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
}

.btn-primary {
  background: linear-gradient(135deg, #0d6efd 0%, #0b5ed7 100%);
  border: none;
}

.btn-primary:hover {
  background: linear-gradient(135deg, #0b5ed7 0%, #0a58ca 100%);
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(13, 110, 253, 0.3);
}

.btn-outline-danger:hover {
  background-color: #dc3545;
  border-color: #dc3545;
}

.btn-outline-primary:hover {
  background-color: #0d6efd;
  border-color: #0d6efd;
}

@media (max-width: 768px) {
  .card-body {
    padding: 2rem 1.5rem !important;
  }
}

.alert {
  border: none;
  border-radius: 0.5rem;
}

.is-invalid {
  border-color: #dc3545 !important;
}

.invalid-feedback {
  display: block;
}

.spinner-border-sm {
  width: 1rem;
  height: 1rem;
}
</style>