name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build documentation
        run: |
          mkdir -p _site
          cp -r docs/* _site/
          cp index.html _site/
          
          # Generate API documentation if swagger/openapi exists
          if [ -f "docs/api.yml" ]; then
            echo "Generating API docs..."
          fi
          
          # Copy important documentation files
          cp README.md _site/readme.md
          cp CHANGELOG.md _site/changelog.md
          cp LICENSE _site/license.txt
          
          # Create sitemap
          echo "Creating sitemap..."
          cat > _site/sitemap.xml << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
            <url>
              <loc>https://your-username.github.io/multi-billeterie/</loc>
              <lastmod>$(date -I)</lastmod>
              <changefreq>weekly</changefreq>
              <priority>1.0</priority>
            </url>
            <url>
              <loc>https://your-username.github.io/multi-billeterie/docs/</loc>
              <lastmod>$(date -I)</lastmod>
              <changefreq>weekly</changefreq>
              <priority>0.8</priority>
            </url>
          </urlset>
          EOF

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Lighthouse CI job
  lighthouse:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.12.x

      - name: Run Lighthouse CI
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: |
          lhci autorun --upload.target=temporary-public-storage || echo "Lighthouse CI failed, but continuing..."